{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hackweek Introduction Overview Welcome to the Waterhackweek hackweek! Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas. This preliminary tutorial is one that we would like you to complete before arriving to the hackweek. The purpose is to learn about how we plan to work with various software tools and how you can best prepare for our event. We would like everyone works through this tutorial so that we can make the best use of our time together in person. What is the format of this event? Here is a general roadmap of our event: we begin the hackweek with a review of our code of conduct, and we build a set of guidelines for co-creating a positive and welcoming learning environment each day will include some combination of tutorials, short presentations and/or open project time / hacking. we will guide participants through the formation of groups early in the event *we'll check-in with project teams on a regular basis to find what's working and where challenges lie. there will be opportunities for peer learning and open tutorials on topics of most interest to the group participants will be invited to present their work at the end of the event Will my laptop work for this hackathon? All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event. Will I need to learn a specific programming language to participate? We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data. What can I do in advance to prepare? We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive. Setting up your laptop and getting access to computing resources Introduction to Github : setting up a GitHub account Introduction to Conda : installing Python on your laptop GEE Access and Javascript Tips : setting up Google Earth Engine account Learning Python Basics Self-working notebooks to understand practical aspects of Numpy and Pandas Introduction to Numpy Introduction to Pandas How do I ask questions about the Hackweek? If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack . Second, we have Cyberseminars scheduled on specific days, for which you can find the schedule here .","title":"Home"},{"location":"#hackweek-introduction","text":"","title":"Hackweek Introduction"},{"location":"#overview","text":"Welcome to the Waterhackweek hackweek! Hackweeks were originally designed by the University of Washington's eScience Institute , and they aim to provide a welcoming learning environment where you can learn new software tools, collaborate with colleagues, build community and make progress on specific projects. Our hackweek model is constantly evolving and we invite you actively participate as we experiment with new approaches and ideas. This preliminary tutorial is one that we would like you to complete before arriving to the hackweek. The purpose is to learn about how we plan to work with various software tools and how you can best prepare for our event. We would like everyone works through this tutorial so that we can make the best use of our time together in person.","title":"Overview"},{"location":"#what-is-the-format-of-this-event","text":"Here is a general roadmap of our event: we begin the hackweek with a review of our code of conduct, and we build a set of guidelines for co-creating a positive and welcoming learning environment each day will include some combination of tutorials, short presentations and/or open project time / hacking. we will guide participants through the formation of groups early in the event *we'll check-in with project teams on a regular basis to find what's working and where challenges lie. there will be opportunities for peer learning and open tutorials on topics of most interest to the group participants will be invited to present their work at the end of the event","title":"What is the format of this event?"},{"location":"#will-my-laptop-work-for-this-hackathon","text":"All participants will be required to have their own laptop. The absolute minimum requirement is any laptop with a functioning web browser so that you can access our shared cloud computing resources. We will also teach you to install software on your own computer. For that we recommend the following: Windows Vista or newer, MAC OS X 10.7+, or Linux (Ubuntu, RedHat and others; CentOS 5+) 32-bit or 64-bit Minimum 3 GB disk space to download and install software If you do not have a laptop, please contact us and we might be able to loan you one during the event.","title":"Will my laptop work for this hackathon?"},{"location":"#will-i-need-to-learn-a-specific-programming-language-to-participate","text":"We welcome all participants regardless of their programming background. In order to teach our content in a consistent way we need to select one programming languge. We have chosen Python because it is free and open source, and has many libraries suitable for efficient manipulation of a variety of different types of data.","title":"Will I need to learn a specific programming language to participate?"},{"location":"#what-can-i-do-in-advance-to-prepare","text":"We require all participants to work through the following lessons in advance of our event. The lessons are brief and will ensure that we are all set up and ready to work when we arrive.","title":"What can I do in advance to prepare?"},{"location":"#setting-up-your-laptop-and-getting-access-to-computing-resources","text":"Introduction to Github : setting up a GitHub account Introduction to Conda : installing Python on your laptop GEE Access and Javascript Tips : setting up Google Earth Engine account","title":"Setting up your laptop and getting access to computing resources"},{"location":"#learning-python-basics","text":"Self-working notebooks to understand practical aspects of Numpy and Pandas Introduction to Numpy Introduction to Pandas","title":"Learning Python Basics"},{"location":"#how-do-i-ask-questions-about-the-hackweek","text":"If you have technical or general questions about the Hackweek, we are here to help. First, you can use the General channel on Slack . Second, we have Cyberseminars scheduled on specific days, for which you can find the schedule here .","title":"How do I ask questions about the Hackweek?"},{"location":"conda/","text":"Conda Basics Overview What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive. Python Software Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on. What is Conda? Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows. Installing Miniconda Windows Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings. Linux and OSX You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes Installing Anaconda (Optional) NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ... Installing Python We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Introduction to Conda"},{"location":"conda/#conda-basics","text":"","title":"Conda Basics"},{"location":"conda/#overview","text":"What happens after the event when you want to go home and work with all the libraries ? You will likely also want to have a functioning version of Python on your local laptop if that is not already in place. So this lesson takes you through our recommended procedure for doing that. We suggest you get this set up in advance so that we can help you troubleshoot when you arrive.","title":"Overview"},{"location":"conda/#python-software","text":"Python software is distributed as a series of libraries that are called within your code to perform certain tasks. There are many different collections, or distributions of Python software. Generally you install a specific distribution of Python and then add additional libraries as you need them. There are also several different versions of Python. The two main versions right now are 2.7 and 3.7, although Python 2.7 will not be supported past 2020. Some libraries only work with specific versions of Python. So even though Python is one of the most adaptable, easy-to-use software systems, you can see there are still complexities to work out and potential challenges when delivering content to a large group. Therefore we have a number of different ways that we are trying to simplify this process to maximize your learning during the hackweek. We also provide instructions for using Anaconda , which is our recommended Python distribution, for installing and working with Python on your local computer. We can assist in setting up \"conda\" environments that will simplify the gathering of Python libraries and version specific to the tutorial you are working on.","title":"Python Software"},{"location":"conda/#what-is-conda","text":"Conda is an open source package and environment management system for any programming languages, but very popular among python community, for installing multiple versions of software packages, their dependencies and switching easily between them. It works on Linux, OS X and Windows.","title":"What is Conda?"},{"location":"conda/#installing-miniconda","text":"","title":"Installing Miniconda"},{"location":"conda/#windows","text":"Click here to download the proper installer for your Windows platform (64 bits). We recommend to download the Python 3 version of Miniconda. You can still create Python 2 environments using the Python 3 version of Miniconda. When installing, you will be asked if you wish to make the Anaconda Python your default Python for Windows. If you do not have any other installation that is a good option. If you want to keep multiple versions of python on your machine (e.g. ESRI-supplied python, or 64 bit versions of Anaconda), then don't select the option to modify your path or modify your windows registry settings.","title":"Windows"},{"location":"conda/#linux-and-osx","text":"You may follow manual steps from here similar to the instructions on Windows (see above). Alternatively, you can execute these commands on a terminal shell (in this case, the bash shell): # For MacOSX url=https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh # For Linux url=https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh wget $url -O miniconda.sh bash miniconda.sh -b -p $HOME/miniconda export PATH=\"$HOME/miniconda/bin:$PATH\" conda update conda --yes","title":"Linux and OSX"},{"location":"conda/#installing-anaconda-optional","text":"NOTE: If you don't have time or disk space for the entire distribution do not install Anaconda. Install only Miniconda , a bootstrap version of Anaconda, which contains only Python, essential packages, and conda. We will provide an environment file to install all the packages necessary for the hackweek. Anaconda is a data science platform that comes with a lot of packages. At its core, Anaconda uses the conda package management system. The list of packages included can be found here To install Anaconda, please click on the link below for your operating system, and follow the instructions on the site . Once Anaconda installation step is finished run python in the command line to test if Anaconda is installed correctly. Note: For windows, please use the Anaconda prompt as the command line. It should be installed with your installation of Anaconda If Anaconda is installed correctly, you should have this prompt, which emphasizes Anaconda : $ python Python 3.7.3|Anaconda custom (x86_64)| (default, Mar 27 2019, 22:11:17) ...","title":"Installing Anaconda (Optional)"},{"location":"conda/#installing-python","text":"We will be using Python 3.6 or 3.7 during the week (either will work). Since Anaconda (on Linux) expects you to work in the \"bash\" shell, if this is not already your default shell, you need to set it to be so (use the \"chsh -s /bin/bash\" command to change your default shell to bash) or just run an instance of bash from the command line before issuing \"Conda\" commands (/bin/bash or where it is located on your system). If you are already familiar with Python 2.7, you can take a look at the syntax differences here , but the main point to remember is to put the print statements in parentheses: print('Hello World!') $ conda create -n py37 python=3.7 To use Python 3.7: $ conda activate py37 To check if you have the correct version: $ python --version","title":"Installing Python"},{"location":"gee_javascript/","text":"Google Earth Engine Access and Javascript Tips Please complete this tutorial before arriving at Waterhackweek. Use the steps below to get registered for a Google Earth Engine (GEE) account and to join our shared repository. How do I get a GEE account? Go the the GEE sign up page and enter > the email you want to use for your GEE account. A gmail is best if you have one. Enter your email, your affiliation and country/region. Where it asks what you want to accomplish, mention you are at Waterhackweek at the University of Washington. Review the terms, verify your non-robot identify and click 'Submit'. Check your email, including your spam folder, for a link from the Google Developer's Team. The confirmation email will have directions on how to access the Code Editor. Not sure if you have access? Use this link to check. If you didn't get access you will get an authorization error that says your account isn't registered. If you do have access, the link will open up the Javascript IDE. This link is your permanent portal to GEE access. What are some JavaScript basics? JavaScript, not to be confused with Java, is a programming language widely used in web development alongside HTML and CSS. You can teach yourself JavaScript using any number of online tutorials, such as those offered by w3schools . At Waterhackweek, we access GEE by entering JavaScript commands into an online integrated development environment (IDE) called the Code Editor. It is not necessary to formally learn JavaScript to work with GEE. Below we provide examples and resources for getting started. Javascript Tips Here are a few basics useful for GEE, reproduced from the Earth Engine 101 Beginner's Curriculum . // Line comments start with two forward slashes. Like this line. /* Multi-line comments start with a forward slash and a star, and end with a star and a forward slash. */ Variables are used to store objects and are defined using the keyword var . var theAnswer = 42; // string objects start and end with a single quote var myVariable = 'I am a string'; // string objects can also use double quotes, but don't mix and match var myOtherVariable = \"I am also a string\"; Statements should end in a semi-colon, or the editor complains. var test = 'I feel incomplete...' var test2 = 'I feel complete!'; Passing function parameters and using lists // Parentheses are used to pass parameters to functions print('This string will print in the Console tab.'); /* Square brackets are used for items in a list. The zero index refers to the first item in a list*/ var myList = ['eggplant','apple','wheat']; print(myList[0]); // would print 'eggplant' Using dictionaries // Curly brackets (or braces) can be used to define dictionaries (key:value pairs). var myDict = {'food':'bread', 'color':'red', 'number':42}; // Square brackets can be used to access dictionary items by key. print(myDict['color']); //Or you can use the dot notation to get the same result. print(myDict.color); Functions can be defined as a way to reuse code and make it easier to read. var myHelloFunction = function(string) { return 'Hello ' + string + '!'; }; print(myHelloFunction('world')); Other JavaScript Resources JavaScript uses camelCase. JavaScript (according to W3 academy) is easy to learn. Like other programming languages, you can use style guides to learn how to write standard, reproducible (marketable!) code. For in-depth industry guidance, Google publishes their own definitive JavaScript style guide . Dana Tomlin has also created a short JavaScript Quick Start Guide which only takes a few minutes to work through but hits some of the basics. You can find it clicking that link or by going to the GEE homepage, clicking on the EDU tab in the upper left, and scrolling down to the Geospatial Software Design Exercises section.","title":"GEE Access and Javscript Tips"},{"location":"gee_javascript/#google-earth-engine-access-and-javascript-tips","text":"Please complete this tutorial before arriving at Waterhackweek. Use the steps below to get registered for a Google Earth Engine (GEE) account and to join our shared repository.","title":"Google Earth Engine Access and Javascript Tips"},{"location":"gee_javascript/#how-do-i-get-a-gee-account","text":"Go the the GEE sign up page and enter > the email you want to use for your GEE account. A gmail is best if you have one. Enter your email, your affiliation and country/region. Where it asks what you want to accomplish, mention you are at Waterhackweek at the University of Washington. Review the terms, verify your non-robot identify and click 'Submit'. Check your email, including your spam folder, for a link from the Google Developer's Team. The confirmation email will have directions on how to access the Code Editor. Not sure if you have access? Use this link to check. If you didn't get access you will get an authorization error that says your account isn't registered. If you do have access, the link will open up the Javascript IDE. This link is your permanent portal to GEE access.","title":"How do I get a GEE account?"},{"location":"gee_javascript/#what-are-some-javascript-basics","text":"JavaScript, not to be confused with Java, is a programming language widely used in web development alongside HTML and CSS. You can teach yourself JavaScript using any number of online tutorials, such as those offered by w3schools . At Waterhackweek, we access GEE by entering JavaScript commands into an online integrated development environment (IDE) called the Code Editor. It is not necessary to formally learn JavaScript to work with GEE. Below we provide examples and resources for getting started.","title":"What are some JavaScript basics?"},{"location":"gee_javascript/#javascript-tips","text":"Here are a few basics useful for GEE, reproduced from the Earth Engine 101 Beginner's Curriculum . // Line comments start with two forward slashes. Like this line. /* Multi-line comments start with a forward slash and a star, and end with a star and a forward slash. */ Variables are used to store objects and are defined using the keyword var . var theAnswer = 42; // string objects start and end with a single quote var myVariable = 'I am a string'; // string objects can also use double quotes, but don't mix and match var myOtherVariable = \"I am also a string\"; Statements should end in a semi-colon, or the editor complains. var test = 'I feel incomplete...' var test2 = 'I feel complete!'; Passing function parameters and using lists // Parentheses are used to pass parameters to functions print('This string will print in the Console tab.'); /* Square brackets are used for items in a list. The zero index refers to the first item in a list*/ var myList = ['eggplant','apple','wheat']; print(myList[0]); // would print 'eggplant' Using dictionaries // Curly brackets (or braces) can be used to define dictionaries (key:value pairs). var myDict = {'food':'bread', 'color':'red', 'number':42}; // Square brackets can be used to access dictionary items by key. print(myDict['color']); //Or you can use the dot notation to get the same result. print(myDict.color); Functions can be defined as a way to reuse code and make it easier to read. var myHelloFunction = function(string) { return 'Hello ' + string + '!'; }; print(myHelloFunction('world'));","title":"Javascript Tips"},{"location":"gee_javascript/#other-javascript-resources","text":"JavaScript uses camelCase. JavaScript (according to W3 academy) is easy to learn. Like other programming languages, you can use style guides to learn how to write standard, reproducible (marketable!) code. For in-depth industry guidance, Google publishes their own definitive JavaScript style guide . Dana Tomlin has also created a short JavaScript Quick Start Guide which only takes a few minutes to work through but hits some of the basics. You can find it clicking that link or by going to the GEE homepage, clicking on the EDU tab in the upper left, and scrolling down to the Geospatial Software Design Exercises section.","title":"Other JavaScript Resources"},{"location":"github/","text":"GitHub What is Git/GitHub? Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment. What if I do not have the git command on my local machine? If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation Why do I need a GitHub account? There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later! Why are we joining a GitHub Organization? GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Jane Koh on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation How should I configure my GitHub account? As you'll learn in the next lesson, we will use the Waterhackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the Waterhackweek organization. First, navigate to the \"People\" tab on the Waterhackweek GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page. How will GitHub repositories be structured? When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person. How do I learn more? We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"Introduction to Github"},{"location":"github/#github","text":"","title":"GitHub"},{"location":"github/#what-is-gitgithub","text":"Git is a popular version control system that is the foundation of most open source software development. You are not required to know Git in advance of this event, but come prepared to learn a lot about it! GitHub is a hosting service for Git repositories, enabling us to share code across teams in a web environment.","title":"What is Git/GitHub?"},{"location":"github/#what-if-i-do-not-have-the-git-command-on-my-local-machine","text":"If you don't have Git installed on you local machine, you can download the latest installer on Git-SCM . More help for the install process can be found in the official Git documentation","title":"What if I do not have the git command on my local machine?"},{"location":"github/#why-do-i-need-a-github-account","text":"There are three reasons you are required to have a GitHub account for the hackweek: We use GitHub credentialing to give everyone access to our cloud computing resources All of our tutorials and project work will be shared on GitHub You will want a GitHub account to practice everything you'll be learning during the Git/GitHub tutorials So, if you don't already have a GitHub account, just navigate to GitHub : Then, click on the big green button and then answer a few required questions. Be sure to save your password somewhere safe because you will need it later!","title":"Why do I need a GitHub account?"},{"location":"github/#why-are-we-joining-a-github-organization","text":"GitHub organizations are a convenient way for teams to get all content relevant to a specific project our workshop into one place. By having everything in one central location you will spend less time searching for hackweek content. GitHub organizations have ``teams'' that offer simple ways to provide respository access to groups of people, rather than individuals. We have created a GitHub organization called Waterhackweek . For security purposes you can only join the organization by invitation. Here are the steps: Once you have a GitHub ID, send it to Jane Koh on our Slack channel We will then find your ID and send you an invitation which should generate an email notification to the email you provided when you signed up for GitHub Follow the links in the email to accept the invitation","title":"Why are we joining a GitHub Organization?"},{"location":"github/#how-should-i-configure-my-github-account","text":"As you'll learn in the next lesson, we will use the Waterhackweek GitHub organization as a way to manage access to our cloud computing resources. In order for this to work each person must have public, rather than private membership in the Waterhackweek organization. First, navigate to the \"People\" tab on the Waterhackweek GitHub organization: Now, if you see \"Private\" to the right of your account, you will need to switch this to \"Public\": The steps for doing this are also well documented on this GitHub help page.","title":"How should I configure my GitHub account?"},{"location":"github/#how-will-github-repositories-be-structured","text":"When you click on the \"Repositories\" tab in the Waterhackweek GitHub Organization you will see a list of names, each of which links to a separate GitHub repository: Each repository is a container for a specific subset of material for this event. For example, we have a separate repository for each tutorial. There is a repository for the public-facing website you used to register for this event, and a repository for the wiki page. We'll also create new repositories for each project when we meet in person.","title":"How will GitHub repositories be structured?"},{"location":"github/#how-do-i-learn-more","text":"We encourage you to start practicing with Git and GitHub in advance of this event. Our tutorials will follow this lesson. Additional tutorial content from our past hackweeks is here . As always, feel free to post questions on Slack if you run into any difficulties!","title":"How do I learn more?"},{"location":"numpy/","text":"Intro to Numpy This lesson provides an introduction to numpy. list learning objectives Reading Assignment (optional) (15 minutes) If you are a beginner Python programmer making the transition from Matlab, read this article . Practical Assignment (30 minutes) Work through this Introduction to Numpy .","title":"Introduction to Numpy"},{"location":"numpy/#intro-to-numpy","text":"This lesson provides an introduction to numpy. list learning objectives","title":"Intro to Numpy"},{"location":"numpy/#reading-assignment-optional-15-minutes","text":"If you are a beginner Python programmer making the transition from Matlab, read this article .","title":"Reading Assignment (optional) (15 minutes)"},{"location":"numpy/#practical-assignment-30-minutes","text":"Work through this Introduction to Numpy .","title":"Practical Assignment (30 minutes)"},{"location":"pandas/","text":"Intro to Pandas This lesson provides an introduction to pandas. Understand concepts Understand data access strategies, data types, Python ecosystem Practical Assignment (30 minutes) Work through this Introduction to Pandas . Optional Links Refer this article on the essentials of Pandas, addressing the problem of redundancy and the highlights to retain. Combine your git and pandas skills! Fork this repository and start coding!","title":"Introduction to Pandas"},{"location":"pandas/#intro-to-pandas","text":"This lesson provides an introduction to pandas. Understand concepts Understand data access strategies, data types, Python ecosystem","title":"Intro to Pandas"},{"location":"pandas/#practical-assignment-30-minutes","text":"Work through this Introduction to Pandas .","title":"Practical Assignment (30 minutes)"},{"location":"pandas/#optional-links","text":"Refer this article on the essentials of Pandas, addressing the problem of redundancy and the highlights to retain. Combine your git and pandas skills! Fork this repository and start coding!","title":"Optional Links"}]}